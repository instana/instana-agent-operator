// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/hash/hash.go

// Package daemonset is a generated GoMock package.
package daemonset

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockJsonHasher is a mock of JsonHasher interface.
type MockJsonHasher struct {
	ctrl     *gomock.Controller
	recorder *MockJsonHasherMockRecorder
}

// MockJsonHasherMockRecorder is the mock recorder for MockJsonHasher.
type MockJsonHasherMockRecorder struct {
	mock *MockJsonHasher
}

// NewMockJsonHasher creates a new mock instance.
func NewMockJsonHasher(ctrl *gomock.Controller) *MockJsonHasher {
	mock := &MockJsonHasher{ctrl: ctrl}
	mock.recorder = &MockJsonHasherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJsonHasher) EXPECT() *MockJsonHasherMockRecorder {
	return m.recorder
}

// HashJsonOrDie mocks base method.
func (m *MockJsonHasher) HashJsonOrDie(obj interface{}) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HashJsonOrDie", obj)
	ret0, _ := ret[0].(string)
	return ret0
}

// HashJsonOrDie indicates an expected call of HashJsonOrDie.
func (mr *MockJsonHasherMockRecorder) HashJsonOrDie(obj interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HashJsonOrDie", reflect.TypeOf((*MockJsonHasher)(nil).HashJsonOrDie), obj)
}
