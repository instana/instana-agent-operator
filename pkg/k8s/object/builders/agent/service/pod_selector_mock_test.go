// /*
// (c) Copyright IBM Corp. 2024
// (c) Copyright Instana Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// */
//

// Code generated by MockGen. DO NOT EDIT.
package service

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockPodSelectorLabelGenerator is a mock of PodSelectorLabelGenerator interface.
type MockPodSelectorLabelGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockPodSelectorLabelGeneratorMockRecorder
}

// MockPodSelectorLabelGeneratorMockRecorder is the mock recorder for MockPodSelectorLabelGenerator.
type MockPodSelectorLabelGeneratorMockRecorder struct {
	mock *MockPodSelectorLabelGenerator
}

// NewMockPodSelectorLabelGenerator creates a new mock instance.
func NewMockPodSelectorLabelGenerator(ctrl *gomock.Controller) *MockPodSelectorLabelGenerator {
	mock := &MockPodSelectorLabelGenerator{ctrl: ctrl}
	mock.recorder = &MockPodSelectorLabelGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPodSelectorLabelGenerator) EXPECT() *MockPodSelectorLabelGeneratorMockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *MockPodSelectorLabelGenerator) ISGOMOCK() struct{} {
	return struct{}{}
}

// GetPodLabels mocks base method.
func (m *MockPodSelectorLabelGenerator) GetPodLabels(userLabels map[string]string) map[string]string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPodLabels", userLabels)
	ret0, _ := ret[0].(map[string]string)
	return ret0
}

// GetPodLabels indicates an expected call of GetPodLabels.
func (mr *MockPodSelectorLabelGeneratorMockRecorder) GetPodLabels(userLabels any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPodLabels", reflect.TypeOf((*MockPodSelectorLabelGenerator)(nil).GetPodLabels), userLabels)
}

// GetPodSelectorLabels mocks base method.
func (m *MockPodSelectorLabelGenerator) GetPodSelectorLabels() map[string]string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPodSelectorLabels")
	ret0, _ := ret[0].(map[string]string)
	return ret0
}

// GetPodSelectorLabels indicates an expected call of GetPodSelectorLabels.
func (mr *MockPodSelectorLabelGeneratorMockRecorder) GetPodSelectorLabels() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPodSelectorLabels", reflect.TypeOf((*MockPodSelectorLabelGenerator)(nil).GetPodSelectorLabels))
}
