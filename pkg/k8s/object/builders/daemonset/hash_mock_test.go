// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/hash/hash.go

// Package daemonset is a generated GoMock package.
package daemonset

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHasher is a mock of Hasher interface.
type MockHasher struct {
	ctrl     *gomock.Controller
	recorder *MockHasherMockRecorder
}

// MockHasherMockRecorder is the mock recorder for MockHasher.
type MockHasherMockRecorder struct {
	mock *MockHasher
}

// NewMockHasher creates a new mock instance.
func NewMockHasher(ctrl *gomock.Controller) *MockHasher {
	mock := &MockHasher{ctrl: ctrl}
	mock.recorder = &MockHasherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHasher) EXPECT() *MockHasherMockRecorder {
	return m.recorder
}

// HashOrDie mocks base method.
func (m *MockHasher) HashOrDie(obj interface{}) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HashOrDie", obj)
	ret0, _ := ret[0].(string)
	return ret0
}

// HashOrDie indicates an expected call of HashOrDie.
func (mr *MockHasherMockRecorder) HashOrDie(obj interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HashOrDie", reflect.TypeOf((*MockHasher)(nil).HashOrDie), obj)
}
