#
# (c) Copyright IBM Corp. 2025
#
version: "2"

tasks:
  pr-code-checks:
    displayName: build-images-and-e2e
    runtimeClassName: large
    onError: stopAndFail
    include:
      - dind
    steps:
      - name: unit-test
        image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3
        include:
          - docker-socket
        script: |
          #!/usr/bin/env bash
          export TASK_NAME="pr-code-checks"
          export SKIP_INSTALL_GCLOUD="false"
          source "${WORKSPACE}/${APP_REPO_FOLDER}/ci/sps-scripts/setup.sh"
          source $WORKSPACE/$APP_REPO_FOLDER/ci/sps-scripts/sps-build-multiarch-images.sh
          source $WORKSPACE/$APP_REPO_FOLDER/ci/sps-scripts/vm-janitor.sh
          source $WORKSPACE/$APP_REPO_FOLDER/ci/sps-scripts/ephemeral-k8s-e2e.sh
      - name: detect-secrets
        include:
          - docker-socket
    
  pr-code-checks-2:
    from: pr-code-checks
    displayName: go-lang-unit-test
    runtimeClassName: large
    onError: stopAndFail
    include:
      - dind
    steps:
      - name: unit-test
        image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3
        include:
          - docker-socket
        script: |
          #!/usr/bin/env bash
          source $WORKSPACE/$APP_REPO_FOLDER/ci/sps-scripts/unit-test.sh          
      - name: detect-secrets
        include:
          - docker-socket
          
  pr-code-checks-3:
    from: pr-code-checks
    displayName: operator-olm-build
    runtimeClassName: large
    include:
      - dind
    steps:
      - name: unit-test
        image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3
        include:
          - docker-socket
        script: |
          #!/usr/bin/env bash
          source $WORKSPACE/$APP_REPO_FOLDER/ci/sps-scripts/olm-build.sh
      - name: detect-secrets
        include:
          - docker-socket

  code-pr-finish:
    steps:
      - name: evaluate
        when: 'false'
      - name: prepare
        when: 'false'
      - name: run-stage
        when: 'false'

  e2e-tests:
    displayName: run-e2e-tests
    runtimeClassName: large
    include:
      - dind
    properties:
      branch: "main"  # Default branch, will be overridden by trigger
    steps:
      - name: run-e2e-tests
        image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3
        include:
          - docker-socket
        script: |
          #!/usr/bin/env bash
          export TASK_NAME="e2e-tests"
          env
          pwd
          ls

          # Extract branch from trigger payload
          if [ -f "${TRIGGER_PAYLOAD_PATH}" ]; then
            # Extract branch from payload JSON if it exists
            BRANCH=$(jq -r '.branch // "main"' "${TRIGGER_PAYLOAD_PATH}")
          else
            # Default to main if no payload or branch specified
            BRANCH="main"
          fi
          echo "Running E2E tests for branch: $BRANCH"

          # Checkout the specified branch
          git fetch origin $BRANCH
          git checkout $BRANCH

          # Run your E2E test script
          export CLUSTER_ID="gke-latest"
          export SKIP_INSTALL_GCLOUD="false"
          export TASK_NAME="e2e-tests"
          source $WORKSPACE/$APP_REPO_FOLDER/ci/sps-scripts/e2e.sh
