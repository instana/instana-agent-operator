#
# (c) Copyright IBM Corp. 2025
#
version: "2"

tasks:
  pr-code-checks:
    displayName: build-amd64-arm64-s390x-and-ppc64le-images
    runtimeClassName: x86-xlarge
    onError: stopAndFail
    include:
      - dind
    steps:
      - name: unit-test
        image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3
        include:
          - docker-socket
        script: |
          #!/usr/bin/env bash
          source $WORKSPACE/$APP_REPO_FOLDER/ci/sps-scripts/sps-build-multiarch-images.sh
      - name: detect-secrets
        include:
          - docker-socket
    
  pr-code-checks-2:
    from: pr-code-checks
    displayName: go-lang-unit-test
    runtimeClassName: large
    onError: stopAndFail
    include:
      - dind
    steps:
      - name: unit-test
        image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3
        include:
          - docker-socket
        script: |
          #!/usr/bin/env bash
          source $WORKSPACE/$APP_REPO_FOLDER/ci/sps-scripts/unit-test.sh          
      - name: detect-secrets
        include:
          - docker-socket
          
  pr-code-checks-3:
    from: pr-code-checks
    displayName: operator-olm-build
    runtimeClassName: large
    include:
      - dind
    steps:
      - name: unit-test
        image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3
        include:
          - docker-socket
        script: |
          #!/usr/bin/env bash
          source $WORKSPACE/$APP_REPO_FOLDER/ci/sps-scripts/olm-build.sh
      - name: detect-secrets
        include:
          - docker-socket

  pr-code-checks-4:
    from: pr-code-checks
    displayName: e2e-ocp-latest
    runtimeClassName: large
    runAfter: 
      - pr-code-checks
      - pr-code-checks-2
    include:
      - dind
    steps:
      - name: unit-test
        image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3
        include:
          - docker-socket
        script: |
          #!/usr/bin/env bash
          # make sure to use the git commit as id to test the correct image
          export CLUSTER_ID="ocp-fyre-latest"
          export TASK_NAME="pr-code-checks-4"
          source $WORKSPACE/$APP_REPO_FOLDER/ci/sps-scripts/e2e.sh
      - name: detect-secrets
        include:
          - docker-socket

  pr-code-checks-5:
    from: pr-code-checks
    displayName: e2e-gke-latest
    runtimeClassName: large
    runAfter: 
      - pr-code-checks
      - pr-code-checks-2
    include:
      - dind
    steps:
      - name: unit-test
        image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3
        include:
          - docker-socket
        script: |
          #!/usr/bin/env bash
          export CLUSTER_ID="gke-latest"
          export SKIP_INSTALL_GCLOUD="false"
          export TASK_NAME="pr-code-checks-5"
          source $WORKSPACE/$APP_REPO_FOLDER/ci/sps-scripts/e2e.sh
      - name: detect-secrets
        include:
          - docker-socket

  pr-code-checks-6:
    from: pr-code-checks
    displayName: tag-release
    runtimeClassName: large
    runAfter: 
      - pr-code-checks-4
      - pr-code-checks-5
    include:
      - dind
    steps:
      - name: unit-test
        image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3
        include:
          - docker-socket
        script: |
          #!/usr/bin/env bash
          $WORKSPACE/$APP_REPO_FOLDER/ci/scripts/tag-new-release.sh
      - name: detect-secrets
        include:
          - docker-socket
  
  pr-code-checks-7:
    from: pr-code-checks
    displayName: build-multiarch-manifest
    runtimeClassName: large
    runAfter: 
      - pr-code-checks
    include:
      - dind
    steps:
      - name: unit-test
        image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3
        include:
          - docker-socket
        script: |
          #!/usr/bin/env bash
          $WORKSPACE/$APP_REPO_FOLDER/ci/sps-scripts/build-multiarch-manifest.sh
      - name: detect-secrets
        include:
          - docker-socket

  pr-code-checks-8:
    from: pr-code-checks
    displayName: redhat-marketplace-operator-commit-changes-and-create-pr
    runtimeClassName: large
    runAfter: 
      - pr-code-checks
    include:
      - dind
    steps:
      - name: unit-test
        image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3
        include:
          - docker-socket
        script: |
            #!/usr/bin/env bash
            $WORKSPACE/$APP_REPO_FOLDER/ci/scripts/commit-changes-to-public-repo.sh
      - name: detect-secrets
        include:
          - docker-socket
  
  pr-code-checks-9:
    from: pr-code-checks
    displayName: redhat-marketplace-operators-rebase
    runtimeClassName: large
    runAfter: 
      - pr-code-checks
    include:
      - dind
    steps:
      - name: unit-test
        image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3
        include:
          - docker-socket
        script: |
            #!/usr/bin/env bash
            $WORKSPACE/$APP_REPO_FOLDER/ci/scripts/rebase-fork-branches.sh
      - name: detect-secrets
        include:
          - docker-socket

  pr-code-checks-10:
    from: pr-code-checks
    displayName: certified-operators-commit-changes-and-create-pr
    runtimeClassName: large
    runAfter: 
      - pr-code-checks
    include:
      - dind
    steps:
      - name: unit-test
        image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3
        include:
          - docker-socket
        script: |
            #!/usr/bin/env bash
            $WORKSPACE/$APP_REPO_FOLDER/ci/scripts/commit-changes-to-public-repo.sh
      - name: detect-secrets
        include:
          - docker-socket

  pr-code-checks-11:
    from: pr-code-checks
    displayName: redhat-preflight-scans
    runtimeClassName: large
    runAfter: 
      - pr-code-checks
    include:
      - dind
    steps:
      - name: unit-test
        image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3
        include:
          - docker-socket
        script: |
            #!/usr/bin/env bash
            $WORKSPACE/$APP_REPO_FOLDER/ci/scripts/commit-changes-to-public-repo.sh
      - name: detect-secrets
        include:
          - docker-socket

  code-pr-finish:
    steps:
      - name: evaluate
        when: 'false'
      - name: prepare
        when: 'false'
      - name: run-stage
        when: 'false'