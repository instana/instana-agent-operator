<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.instana</groupId>
  <artifactId>instana-agent-operator</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <name>instana-agent-operator</name>
  <description>Kubernetes Operator for the Instana Agent</description>

  <properties>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <surefire-plugin.version>2.22.0</surefire-plugin.version>
    <quarkus.version>1.9.0.Final</quarkus.version>
    <bouncycastle.version>1.62</bouncycastle.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.target>1.8</maven.compiler.target>
    <build-helper-plugin.version>3.2.0</build-helper-plugin.version>
    <license-plugin.version>4.0.rc2</license-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-bom</artifactId>
        <version>${quarkus.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-kubernetes-client</artifactId>
    </dependency>
    <!-- This is an "optional" dependency, but is required to create the default KubernetesClient -->
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk15on</artifactId>
      <version>${bouncycastle.version}</version>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-reactive-streams-operators</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-test-kubernetes-client</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>2.2.9</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <version>1.3.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <resources>
        <resource>
            <filtering>true</filtering>
            <directory>src/main/resources</directory>
            <includes>
                <include>application.properties</include>
            </includes>
        </resource>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/resources</directory>
        <includes>
          <include>*.yaml</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemProperties>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build-helper-plugin.version}</version>
        <executions>
          <execution>
            <id>timestamp-property</id>
            <goals>
              <goal>timestamp-property</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <name>current.year</name>
              <locale>en_US</locale>
              <pattern>yyyy</pattern>
              <unit>year</unit>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>${license-plugin.version}</version>
        <configuration>
          <useDefaultExcludes>true</useDefaultExcludes>
          <aggregate>false</aggregate>
          <defaultProperties>
            <currentYear>${current.year}</currentYear>
          </defaultProperties>
          <mapping>
            <Dockerfile.jvm>SCRIPT_STYLE</Dockerfile.jvm>
            <Dockerfile.native>SCRIPT_STYLE</Dockerfile.native>
            <Dockerfile.ci>SCRIPT_STYLE</Dockerfile.ci>
            <Dockerfile.bundle>SCRIPT_STYLE</Dockerfile.bundle>
          </mapping>
          <licenseSets>
            <licenseSet>
              <header>license-header.txt</header>
              <includes>
                <include>**/src/main/java/**/*.java</include>
                <include>**/src/test/java/**/*.java</include>
                <include>**/*Dockerfile*</include>
                <include>**/*.sh</include>
              </includes>
            </licenseSet>
          </licenseSets>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-maven-plugin</artifactId>
            <version>${quarkus.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>native-image</goal>
                </goals>
                <configuration>
                  <enableHttpUrlHandler>true</enableHttpUrlHandler>
                  <additionalBuildArgs>-H:IncludeResources=application.properties</additionalBuildArgs>
                  <additionalBuildArgs>-H:IncludeResources=instana-agent.clusterrole.yaml</additionalBuildArgs>
                  <additionalBuildArgs>-H:IncludeResources=instana-agent.clusterrolebinding.yaml</additionalBuildArgs>
                  <additionalBuildArgs>-H:IncludeResources=instana-agent.configmap.yaml</additionalBuildArgs>
                  <additionalBuildArgs>-H:IncludeResources=instana-agent.daemonset.yaml</additionalBuildArgs>
                  <additionalBuildArgs>-H:IncludeResources=instana-agent.secret.yaml</additionalBuildArgs>
                  <additionalBuildArgs>-H:IncludeResources=instana-agent.serviceaccount.yaml</additionalBuildArgs>
                  <additionalBuildArgs>-H:IncludeResources=event.yaml</additionalBuildArgs>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <systemProperties>
                    <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                  </systemProperties>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
